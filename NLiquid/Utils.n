using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra;
using Nitra.Declarations;
using Nitra.Runtime;

using NLiquid.Parser.Ast;

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;

namespace NLiquid
{
  public module Utils
  {
  	public ResolveCall(func : Ref[DeclarationSymbol], arg0Type : TypeSymbol, argsTypes : ImmutableArray[TypeSymbol]) : Ref[FunSymbol]
  	{
  		def argCount = argsTypes.Length + 1;
  		def args = array(argCount);
  		args[0] = arg0Type;
  		argsTypes.CopyTo(args, 1);
  		// бежим по func.Ambiguities и отбираем из них те, что имеют argCount аргументов,
  		// и типы параметров которых урифицируются с типами из args.
  		null
  	}
  }
}
