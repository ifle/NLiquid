using Nitra;
using Nitra.Declarations;
using Nitra.Runtime;
using NLiquid;
using System.IO;

namespace NLiquid.Parser.Ast
{
	ast CompilationUnit
	{
		Statements : Statement*;
	}

	abstract ast Statement : BindableAst
	{
		| Plain  { }
		| Comment { }
		| Output { Expr : Expr; }
		| If 
		 { 	
			Condition : Expr;
			Body      : Statement*; 
			ElseIf    : ElseIf*;
			Else      : Else?;
		 }		
	}

	ast ElseIf 
	{  
		Condition : Expr; 
		Body : Statement*;  
	}
	ast Else  
	{ 
		Body: Statement*; 
	}	

	declaration Assignment : Statement
	{
		Initializer : Expr;
	}

	abstract ast Expr : BindableAst
	{
		| SStr         { Value : string; }
		| DStr         { Value : string; }
		| Ref          { Reference : Reference; }
		| MemberAccess { Qualifier : Expr; Reference : Reference; }
		| Error        { Error(context, "Expected: Expr '}}'"); }
		| Call         { Func : Expr; Args : Expr*; }
	}
}
