using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Collections.Immutable;

using NLiquid;
using NLiquid.Parser;
using NLiquid.Parser.Ast;

namespace NLiquid.Filters
{
  public class FilterManager
  {
    public static Load(): ImmutableArray[MemberInfo]
    {
      def builder = ImmutableArray.CreateBuilder.[MemberInfo]();
      
      foreach (filterType in Assembly.GetExecutingAssembly().GetTypes().Where(type => type.IsClass && type.GetCustomAttribute.[FilterContainerAttribute]() != null))
		  foreach (method in filterType.GetMethods(BindingFlags.Public | BindingFlags.Static))
			{
				builder.Add(method);			  
			}
			
			builder.ToImmutable();
    }
    
    public static ToFunSymbol(this method: MethodInfo): FunSymbol
    {
      null
    }
  }
}
